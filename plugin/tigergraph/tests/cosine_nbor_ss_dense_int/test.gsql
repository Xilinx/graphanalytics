use graph xgraph
drop query test

create query test() for graph xgraph {
    uint topK;
    double score;
    vertex<patients> newPatient;
    ListAccum<ListAccum<int> > @@patientsAll;
    ListAccum<testResults> @@result;

    topK = 100;
# Patient Population
    population = {patients.*};
#print population;
    patientList = select p from population:p
        ACCUM @@patientsAll += patient_vector(p);
# Pick one random patient
    randomPatient = select p from population:p 
        Limit 10;

    print randomPatient;
# Assign to a patient vertex
    randomPatient = select p from randomPatient:p
        ACCUM newPatient = p;
# Cosine Similarity using TigerGraph
#    @@result = cosinesim_ss_tigergraph(newPatient, topK);
#    print "Cosine Sim using TigerGraph";
#    foreach topKP in @@result do
#        patientSet = select v from population:v 
#        WHERE getvid(topKP.Id) == getvid(v) 
#        ACCUM score = topKP.score
#        POST-ACCUM file1.println(score, v.FIRST_NAME, v.LAST_NAME, patient_age(v), v.RACE, v.ETHNICITY,v.GENDER, 
#                v.outdegree("patient_HAD_immunization"), code_str(v, "patient_HAD_immunization", 3), 
#                v.outdegree("patient_HAD_allergy"), code_str(v, "patient_HAD_allergy", 3),
#                v.outdegree("patient_HAD_condition"), code_str(v, "patient_HAD_condition", 3),
#                v.outdegree("patient_HAD_procedure"), code_str(v, "patient_HAD_procedure", 3),
#                v.outdegree("patient_HAD_careplan"), code_str(v, "patient_HAD_careplan", 3)
#                );
#    end;
}

install query test
run query test()


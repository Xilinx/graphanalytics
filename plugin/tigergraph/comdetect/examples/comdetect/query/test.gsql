USE GRAPH @graph
DROP QUERY load_alveo_dev


//Example invocations:
// RUN QUERY load_alveo_dev(["Person"], ["Coworker"],"weight", "louvainId")

CREATE DISTRIBUTED QUERY load_alveo_dev(
    SET<STRING> v_type,             // Set of names of vertex types to be considered. Example: ["Person", "Animal"]
    SET<STRING> e_type,             // Set of names of edge types to be considered. Example: ["co-worker", "owner"]
    STRING wt_attr,                 // Name of the edge attribute which has weight of the the edge. Example: "weight"
    STRING louvainId_attr
)
{  
  
    ListAccum<UINT> @@nodeAccum;

    MapAccum<UINT,UINT> @@parSize; //nodeid-> parSize
    MapAccum<UINT,UINT> @@offsets; //nodeid -> offsets
    FILE f ("/home2/tigergraph/load_alveo_dev_output.txt");
    SumAccum<UINT> @@total_out_degree;

    
    Start = {v_type};

    nodes = {Person.*};
    dnodes = {dummy_nodes.*};
    @@offsets += (0 -> 0);

    nodeList = SELECT n FROM dnodes:n
            ACCUM @@nodeAccum += udf_xilinx_comdetect_set_node_id(n.NODE_ID) , udf_reset_nextId();
 
    A1 = SELECT n FROM nodes:n
             // Local to each server, louvainid is local increasing id
            ACCUM @@total_out_degree+=n.outdegree()
            POST-ACCUM n.setAttr(louvainId_attr, udf_get_nextId(n.outdegree()))
            ORDER BY n.louvainId;
            
    //print attribute louvainId
    PRINT A1[A1.louvainId];
    PRINT @@total_out_degree;
    
    //print to file
    
    A2 = SELECT n FROM nodes:n
            POST-ACCUM f.println(n, n.louvainId, n.outdegree())
            ORDER BY n.louvainId;
    
    partitionSizeList = SELECT n FROM dnodes:n
            ACCUM @@parSize += (n.NODE_ID -> udf_get_partition_size() );
    
    PRINT @@parSize;

    FOREACH n IN RANGE[0,@@nodeAccum.size()-1] DO
            @@offsets += (n+1 -> @@offsets.get(n)+@@parSize.get(n));
    END;

    offsetList = SELECT n FROM dnodes:n
            ACCUM udf_set_louvain_offset(@@offsets.get(n.NODE_ID));

    PRINT @@offsets;

    Start = SELECT s FROM Start:s-(e_type:e)->:t
            ACCUM udf_set_louvain_edge_list(s.louvainId,t.louvainId,e.getAttr(wt_attr,"FLOAT"),t.outdegree());
    
    parList = SELECT n FROM dnodes:n
            ACCUM udf_save_alveo_partition();
    
}

INSTALL QUERY load_alveo_dev


#ifndef CFLAGS
#$(error CFLAGS is not set. Please run "make gpe" instead)
#endif
# The path below is replaced with the actual TigerGraph root directory 
# during installation
TigerGraphPath=TG_ROOT_DIR
EXECUTABLE=bin/release/libudf.so
SOURCE_MAIN_DIR = src/customer/core_impl/gpe_impl
SOURCE_OTHER_DIR = src/customer/core_impl
SOURCES  = $(wildcard $(SOURCE_MAIN_DIR)/impl_lib.cpp)
SOURCES2 = $(wildcard $(SOURCE_OTHER_DIR)/*.cpp)

CC=g++
LIBB = gsdk/lib/release
LIBINCLUDE = -Isrc
LIBINCLUDE += -Igsdk/include
LIBINCLUDE += -Igsdk/include/thirdparty
LIBINCLUDE += -Igsdk/include/thirdparty/sparsehash
LIBINCLUDE += -Igsdk/include/thirdparty/glog
LIBINCLUDE += -Igsdk/include/thirdparty/jsoncpp
LIBINCLUDE += -Igsdk/include/thirdparty/cereal

CFLAGS += -c -Wall -fmessage-length=0
CFLAGS += -Wno-unused -fpermissive -fno-omit-frame-pointer
CFLAGS += -ldl
CFLAGS += -DRELEASE -O3 -DREMOVETESTASSERT
CFLAGS += -D__STDC_FORMAT_MACROS
CFLAGS += -fPIC
CFLAGS += -std=c++11
CFLAGS += $(LIBINCLUDE)

ifeq (exists, $(shell [ -d $(HOME)/.syspre ] && echo exists))
  CFLAGS += --sysroot=$(HOME)/.syspre
  LDFLAGS += --sysroot=$(HOME)/.syspre
endif
LDFLAGS += -L$(LIBB)
LDFLAGS += -ltigergraph
LDFLAGS += -lpthread -ldl
LDFLAGS += -lrt

ODIR = objs
OBJECTS1  = $(patsubst $(SOURCE_MAIN_DIR)/%.cpp,$(ODIR)/%.o,$(SOURCES))
OBJECTS2 = $(patsubst $(SOURCE_OTHER_DIR)/%.cpp,$(ODIR)/%.o,$(SOURCES2))
OBJECTS = $(OBJECTS1) $(OBJECTS2) $(ODIR)/core.o
OBJECTS_EXEC = $(OBJECTS)
ifneq "$(wildcard $(ODIR)/querydispatcher.o)" ""
  OBJECTS_EXEC = $(ODIR)/querydispatcher.o  $(OBJECTS)
  CFLAGS += -DRUNQUERY
endif

GQ_OBJ =
ifneq "$(wildcard $(ODIR)/gq_*.o)" ""
  GQ_OBJ = $(ODIR)/gq_*.o
endif

$(ODIR)/%.o: $(SOURCE_MAIN_DIR)/%.cpp
	$(CC) -o $@ $< $(CFLAGS)

$(ODIR)/%.o: $(SOURCE_OTHER_DIR)/%.cpp
	$(CC) -o $@ $< $(CFLAGS)

$(ODIR)/core.o: gsql/src/QueryUdf/core.cpp
	$(CC) -o $@ $< $(CFLAGS) -D TIGERGRAPH_PATH=\"$(TigerGraphPath)\"

all: $(SOURCES) $(EXECUTABLE)

$(EXECUTABLE): $(OBJECTS)
	$(CC) -shared -o $@  $(OBJECTS_EXEC) $(GQ_OBJ) $(LDFLAGS)

clean:
	@# querydispatcher.o is NOT compiled by Makefile
	@if ls objs/*.o >/dev/null 2>&1  ; then ls objs/*.o | grep -v querydispatcher.o | grep -v "gq_.*\.o" | xargs rm -f; fi
	@\rm -rf $(EXECUTABLE)

